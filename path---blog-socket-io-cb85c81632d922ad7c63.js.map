{"version":3,"sources":["webpack:///path---blog-socket-io-cb85c81632d922ad7c63.js","webpack:///./.cache/json/blog-socket-io.json"],"names":["webpackJsonp","375","module","exports","data","markdownRemark","html","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6iHAAAC,aAAylHC,KAAA,oBAAAC,KAAA,kBAAAC,MAAA,oDAA+GC","file":"path---blog-socket-io-cb85c81632d922ad7c63.js","sourcesContent":["webpackJsonp([18826368022058],{\n\n/***/ 375:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This week, I decided to learn about websockets because they are super cool. According to <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\\\">MDN</a>, websockets “make it possible to open an interactive communication session between the user’s browser and a server.” In other words, you can build applications where multiple users can communicate in real time pretty easily using websockets. One of the best known JavaScript libraries to implement websockets is <a href=\\\"https://socket.io/\\\">Socket.io</a>, so I decided to use it for my project.</p>\\n<p>Let me just say, Socket.io is amazing. It made writing an application with websockets super simple and fast, and I didn’t need much extra code — it probably, in fact, was easier than making a simple AJAX request.</p>\\n<h2>The Learning Process</h2>\\n<p>I started by going through the <a href=\\\"https://socket.io/get-started/chat/\\\">tutorial</a> on the Socket.io website — in about 20 lines of code you have a fully functioning websocket app! It helped me understand the procedures and syntax of the library. It was shockingly easy to build the application — for some reason websockets have always been very intimidating to me, and I thought they would be much harder to use! After that tutorial I felt pretty comfortable building something myself.</p>\\n<h2>The Final Project</h2>\\n<p>Last year for April Fool’s Day, Reddit made an application called /r/place that allowed users to collaboratively build pixel art. <a href=\\\"https://www.youtube.com/watch?v=XnRCZK3KjUY\\\">Here’s</a> a timelapse of what that looked like. It was a lot of fun to collaborate with the rest of the world on the drawing and an overall really cool project.</p>\\n<p>I decided to build a much, much simpler version of that application using React for the frontend, Express for the backend, and Socket.io for communication.</p>\\n<p>Integrating Socket.io with React turned out to be surprisingly easy as well. I ended up adding the event listener to React’s <code>componentDidMount</code> lifecycle method, similar to where an AJAX request would be placed. All in all, the Socket.io code was incredibly simple. My app.js for my Express app is below — it simply listens for connections and pixels changing colors. Below that, I attached my App.js for my React app. If this was for a full blown project, I would have further cleaned up the React code, but for something one off like this I didn’t bother. The <a href=\\\"https://github.com/aspittel/websocket-drawing-backend/blob/master/app.js\\\">backend</a> and <a href=\\\"https://github.com/aspittel/websocket-drawing/blob/master/src/App.js\\\">frontend</a> code is hosted on GitHub! The application is also deployed <a href=\\\"https://aspittel.github.io/websocket-drawing/\\\">online</a>, so play along with your friends!</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/880/1*0Nef284ApeQsqw77FbT1vA.png\\\" alt=\\\"Websocket Drawing App\\\"></p>\\n<p>The beauty of websockets is that I can open up two tabs, or tell one of my friends to use the application and their pixel edits will also show up on my app, like so:</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/880/1*OQeyQcdQR1ctEyHL-OHxWg.png\\\"></p>\\n<h2>Last Thoughts</h2>\\n<p>Again, I was shocked by how easy Socket.io and working with websockets ended up being. I will definitely continue using them to build interactive programs with live flowing data. I like how the final project turned out, and I had a lot of fun building it!</p>\\n<p><strong>Part of my <a href=\\\"https://medium.com/on-learning-new-things/learning-new-things-f4db7f16724\\\">On Learning New Things</a> Series</strong></p>\",\"frontmatter\":{\"date\":\"December 03, 2017\",\"path\":\"/blog/socket-io\",\"title\":\"Socket.io: Making Web Sockets a Piece of Cake!\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-socket-io-cb85c81632d922ad7c63.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This week, I decided to learn about websockets because they are super cool. According to <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\\\">MDN</a>, websockets “make it possible to open an interactive communication session between the user’s browser and a server.” In other words, you can build applications where multiple users can communicate in real time pretty easily using websockets. One of the best known JavaScript libraries to implement websockets is <a href=\\\"https://socket.io/\\\">Socket.io</a>, so I decided to use it for my project.</p>\\n<p>Let me just say, Socket.io is amazing. It made writing an application with websockets super simple and fast, and I didn’t need much extra code — it probably, in fact, was easier than making a simple AJAX request.</p>\\n<h2>The Learning Process</h2>\\n<p>I started by going through the <a href=\\\"https://socket.io/get-started/chat/\\\">tutorial</a> on the Socket.io website — in about 20 lines of code you have a fully functioning websocket app! It helped me understand the procedures and syntax of the library. It was shockingly easy to build the application — for some reason websockets have always been very intimidating to me, and I thought they would be much harder to use! After that tutorial I felt pretty comfortable building something myself.</p>\\n<h2>The Final Project</h2>\\n<p>Last year for April Fool’s Day, Reddit made an application called /r/place that allowed users to collaboratively build pixel art. <a href=\\\"https://www.youtube.com/watch?v=XnRCZK3KjUY\\\">Here’s</a> a timelapse of what that looked like. It was a lot of fun to collaborate with the rest of the world on the drawing and an overall really cool project.</p>\\n<p>I decided to build a much, much simpler version of that application using React for the frontend, Express for the backend, and Socket.io for communication.</p>\\n<p>Integrating Socket.io with React turned out to be surprisingly easy as well. I ended up adding the event listener to React’s <code>componentDidMount</code> lifecycle method, similar to where an AJAX request would be placed. All in all, the Socket.io code was incredibly simple. My app.js for my Express app is below — it simply listens for connections and pixels changing colors. Below that, I attached my App.js for my React app. If this was for a full blown project, I would have further cleaned up the React code, but for something one off like this I didn’t bother. The <a href=\\\"https://github.com/aspittel/websocket-drawing-backend/blob/master/app.js\\\">backend</a> and <a href=\\\"https://github.com/aspittel/websocket-drawing/blob/master/src/App.js\\\">frontend</a> code is hosted on GitHub! The application is also deployed <a href=\\\"https://aspittel.github.io/websocket-drawing/\\\">online</a>, so play along with your friends!</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/880/1*0Nef284ApeQsqw77FbT1vA.png\\\" alt=\\\"Websocket Drawing App\\\"></p>\\n<p>The beauty of websockets is that I can open up two tabs, or tell one of my friends to use the application and their pixel edits will also show up on my app, like so:</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/880/1*OQeyQcdQR1ctEyHL-OHxWg.png\\\"></p>\\n<h2>Last Thoughts</h2>\\n<p>Again, I was shocked by how easy Socket.io and working with websockets ended up being. I will definitely continue using them to build interactive programs with live flowing data. I like how the final project turned out, and I had a lot of fun building it!</p>\\n<p><strong>Part of my <a href=\\\"https://medium.com/on-learning-new-things/learning-new-things-f4db7f16724\\\">On Learning New Things</a> Series</strong></p>\",\"frontmatter\":{\"date\":\"December 03, 2017\",\"path\":\"/blog/socket-io\",\"title\":\"Socket.io: Making Web Sockets a Piece of Cake!\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-socket-io.json\n// module id = 375\n// module chunks = 18826368022058"],"sourceRoot":""}